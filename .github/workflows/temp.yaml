name: Test Build AmneziaWG from cache

on:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: "OpenWrt version"
        type: string
        required: true
        default: "24.10.3"
      openwrt_arch:
        description: "OpenWrt arch"
        type: string
        required: true
        default: "aarch64_cortex-a53"
      openwrt_target:
        description: "OpenWrt target"
        type: string
        required: true
        default: "mediatek"
      openwrt_subtarget:
        description: "OpenWrt subtarget"
        type: string
        required: true
        default: "filogic"
      compile_kmod:
        description: "Compile kernel module implementation"
        type: boolean
        required: true
        default: true
      compile_go:
        description: "Compile Go implementation"
        type: boolean
        required: true
        default: true
      custom_vermagic:
        description: "Override vermagic (optional)"
        type: string
        required: false
        default: "3ca4b8cb2fcc3a2027e8496143a86cab"

jobs:
  build-amneziawg:
    name: "Build AmneziaWG for OpenWrt: ${{ inputs.openwrt_version }} - ${{ inputs.openwrt_arch }} - ${{ inputs.openwrt_target }}/${{ inputs.openwrt_subtarget }}"
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
    steps:
    - name: Checkout OpenWrt repository
      uses: actions/checkout@v5
      with:
        path: openwrt
        repository: openwrt/openwrt
        ref: ${{ inputs.openwrt_version == 'SNAPSHOT' && 'master' || format('v{0}', inputs.openwrt_version) }}
        fetch-depth: 0

    - name: Update PKG_SOURCE_VERSION and HASH
      run: |
        set -e -x

        update_pkg() {
          local dir=$1
          local repo=$2
          local branch=$3

          cd openwrt/package/$dir
          commit=$(git ls-remote $repo $branch | cut -f1)
          url="$repo/archive/$commit.tar.gz"
          hash=$(curl -L -s $url | sha256sum | cut -d' ' -f1)

          sed -i "s/^PKG_SOURCE_VERSION:=.*/PKG_SOURCE_VERSION:=$commit/" Makefile
          sed -i "s/^PKG_MIRROR_HASH:=.*/PKG_MIRROR_HASH:=$hash/" Makefile

          cd - >/dev/null
        }

        update_pkg amneziawg/amneziawg-go https://github.com/amnezia-vpn/amneziawg-go.git master
        update_pkg amneziawg/amneziawg-tools https://github.com/amnezia-vpn/amneziawg-tools.git master
        update_pkg amneziawg/kmod-amneziawg https://github.com/amnezia-vpn/amneziawg-linux-kernel-module.git feature/awg2

    - name: Restore cached tools and kernel
      uses: actions/cache/restore@v4
      with:
        key: ${{ runner.os }}-openwrt-cache-toolchain-kernel-${{ inputs.openwrt_version }}-${{ inputs.openwrt_arch }}-${{ inputs.openwrt_target }}-${{ inputs.openwrt_subtarget }}
        fail-on-cache-miss: true
        path: |
          openwrt/.config
          openwrt/.config.old
          openwrt/feeds.conf.default
          openwrt/bin/**
          openwrt/build_dir/**
          openwrt/dl/**
          openwrt/feeds/**
          openwrt/package/**
          openwrt/staging_dir/**
          openwrt/tmp/**

    - name: Compile AmneziaWG packages
      env:
        compile_kmod: ${{ inputs.compile_kmod }}
        compile_go: ${{ inputs.compile_go }}
      run: |
        set -e -x
        cd openwrt
        if [ "${{ env.compile_kmod }}" = "true" ]; then
          make package/amneziawg/kmod-amneziawg/{clean,download,prepare,compile} -j $(nproc)
        fi
        if [ "${{ env.compile_go }}" = "true" ]; then
          make package/amneziawg/amneziawg-go/{clean,download,prepare,compile} -j $(nproc)
        fi
        make package/amneziawg/luci-proto-amneziawg/{clean,download,prepare,compile} -j $(nproc)
        make package/amneziawg/amneziawg-tools/{clean,download,prepare,compile} -j $(nproc)

    - name: Prepare artifacts
      env:
        compile_kmod: ${{ inputs.compile_kmod }}
        custom_vermagic: ${{ inputs.custom_vermagic }}
      run: |
        set -e -x
        mkdir awgrelease
        if [ -n "$custom_vermagic" ]; then
          echo "vermagic=$custom_vermagic" > awgrelease/vermagic
        else
          echo "vermagic=$(cat openwrt/build_dir/target-${{ inputs.openwrt_arch }}*/linux-${{ inputs.openwrt_target }}_${{ inputs.openwrt_subtarget }}/linux-*/.vermagic)" > awgrelease/vermagic
        fi
        if [ "${{ env.compile_kmod }}" = "true" ]; then
          find "openwrt/bin/targets/${{ inputs.openwrt_target }}/${{ inputs.openwrt_subtarget }}/packages" -maxdepth 1 -type f -name 'kmod-amneziawg*' -exec cp {} awgrelease \;
        fi
        find "openwrt/bin/packages/${{ inputs.openwrt_arch }}/awgopenwrt" -maxdepth 1 -type f \( -name '*.ipk' -o -name '*.apk' \) -exec cp {} awgrelease \;

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: amneziawg-${{ inputs.openwrt_version }}_${{ inputs.openwrt_arch }}_${{ inputs.openwrt_target }}_${{ inputs.openwrt_subtarget }}
        path: awgrelease/*
